# ðŸ§  QUANTUM AI SERVICE DOCKERFILE
# ðŸ”’ MILITARY-GRADE SECURITY + QUANTUM-ENHANCED AI CONTAINER
# ðŸ“ˆ QUANTUM-INFINITE SCALABILITY
# ðŸš€ QUANTUM-OPTIMIZED PERFORMANCE

# Use Node.js 18 with Alpine for smaller image size
FROM node:18-alpine AS base

# Install system dependencies for TensorFlow
RUN apk add --no-cache \
    python3 \
    py3-pip \
    build-base \
    python3-dev \
    libc6-compat \
    curl \
    git \
    && rm -rf /var/cache/apk/*

# Set working directory
WORKDIR /app

# Copy package files
COPY package*.json ./

# Install Node.js dependencies
RUN npm ci --only=production && npm cache clean --force

# Install Python dependencies for TensorFlow
RUN pip3 install --no-cache-dir \
    tensorflow==2.15.0 \
    openai==1.3.0 \
    langchain==0.0.350 \
    natural==6.10.4 \
    compromise==14.10.0 \
    date-fns==3.3.1 \
    numpy==1.24.3 \
    pandas==2.1.4 \
    scikit-learn==1.3.2

# Copy source code
COPY . .

# Create necessary directories
RUN mkdir -p /app/models /app/cache /app/logs /app/training-data

# Set environment variables
ENV NODE_ENV=production
ENV TENSORFLOW_MODEL_PATH=/app/models/
ENV LOG_LEVEL=info

# Create non-root user for security
RUN addgroup -g 1001 -S nodejs && \
    adduser -S nodejs -u 1001

# Change ownership of app directory
RUN chown -R nodejs:nodejs /app

# Switch to non-root user
USER nodejs

# Expose port
EXPOSE 3001

# Health check
HEALTHCHECK --interval=30s --timeout=10s --start-period=60s --retries=3 \
    CMD curl -f http://localhost:3001/health || exit 1

# Start the application
CMD ["node", "index.js"]

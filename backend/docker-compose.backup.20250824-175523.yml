services:
  db:
    image: postgres:15-alpine
    container_name: pawfect_db
    restart: unless-stopped
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: pawfectradar_dev
    ports:
      - "5432:5432"
    volumes:
      - db_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 3s
      timeout: 3s
      retries: 20
    networks:
      - pawfectsitters-network

  # Optional separate DB for tests on 55432 (keep if you run integration tests)
  db_test:
    image: postgres:15-alpine
    container_name: pawfect_db_test
    restart: unless-stopped
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: pawfectradar_test
    ports:
      - "55432:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 3s
      timeout: 3s
      retries: 20
    networks:
      - pawfectsitters-network

  redis:
    image: redis:7-alpine
    container_name: pawfect_redis
    command: ["redis-server","--save","","--appendonly","no"]  # ephemeral, good for dev/tests
    ports:
      - "6379:6379"
    networks:
      - pawfectsitters-network

  # Optional metrics; if you keep this service it now has a valid network
  redis-exporter:
    image: oliver006/redis_exporter:latest
    container_name: pawfect_redis_exporter
    environment:
      - REDIS_ADDR=redis://redis:6379
    ports:
      - "9121:9121"
    depends_on:
      - redis
    networks:
      - pawfectsitters-network

volumes:
  db_data:

networks:
  pawfectsitters-network:
    name: pawfectsitters-network
    driver: bridge

version: '3.8'

services:
  # PostgreSQL Database
  postgres:
    image: postgres:15-alpine
    container_name: pawfectradar-db
    environment:
      POSTGRES_DB: pawfectradar
      POSTGRES_USER: pawfectradar
      POSTGRES_PASSWORD: pawfectradar123
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./backend/prisma/init.sql:/docker-entrypoint-initdb.d/init.sql
    networks:
      - pawfectsitters-network

  # Redis for caching and sessions
  redis:
    image: redis:7-alpine
    container_name: pawfectradar-redis
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    networks:
      - pawfectsitters-network

  # Backend API
  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: pawfectradar-backend
    environment:
      - NODE_ENV=development
      - DATABASE_URL=postgresql://pawfectradar:pawfectradar123@postgres:5432/pawfectradar
      - REDIS_URL=redis://redis:6379
      - PORT=3001
    ports:
      - "3001:3001"
    depends_on:
      - postgres
      - redis
    volumes:
      - ./backend:/app
      - /app/node_modules
    networks:
      - pawfectsitters-network
    command: npm run start:dev

  # Frontend (React Native Metro)
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    container_name: pawfectradar-frontend
    environment:
      - NODE_ENV=development
      - REACT_NATIVE_PACKAGER_HOSTNAME=localhost
    ports:
      - "19000:19000"
      - "19001:19001"
      - "19002:19002"
    volumes:
      - ./frontend:/app
      - /app/node_modules
    networks:
      - pawfectsitters-network
    command: npx expo start --web

  # Nginx Reverse Proxy
  nginx:
    image: nginx:alpine
    container_name: pawfectradar-nginx
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf
      - ./nginx/ssl:/etc/nginx/ssl
    depends_on:
      - backend
      - frontend
    networks:
      - pawfectsitters-network

  # Prometheus for metrics collection
  prometheus:
    image: prom/prometheus:latest
    container_name: pawfectradar-prometheus
    ports:
      - "9090:9090"
    volumes:
      - ./monitoring/prometheus.yml:/etc/prometheus/prometheus.yml
      - ./monitoring/alerts.yml:/etc/prometheus/alerts.yml
      - prometheus_data:/prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.console.libraries=/etc/prometheus/console_libraries'
      - '--web.console.templates=/etc/prometheus/consoles'
      - '--storage.tsdb.retention.time=200h'
      - '--web.enable-lifecycle'
      - '--web.enable-admin-api'
    networks:
      - pawfectsitters-network

  # AlertManager for alert handling
  alertmanager:
    image: prom/alertmanager:latest
    container_name: pawfectradar-alertmanager
    ports:
      - "9093:9093"
    volumes:
      - ./monitoring/alertmanager.yml:/etc/alertmanager/alertmanager.yml
      - alertmanager_data:/alertmanager
    command:
      - '--config.file=/etc/alertmanager/alertmanager.yml'
      - '--storage.path=/alertmanager'
      - '--web.external-url=http://localhost:9093'
    networks:
      - pawfectsitters-network

  # Grafana for visualization
  grafana:
    image: grafana/grafana:latest
    container_name: pawfectradar-grafana
    ports:
      - "3000:3000"
    environment:
      - GF_SECURITY_ADMIN_PASSWORD=admin
      - GF_INSTALL_PLUGINS=grafana-clock-panel,grafana-simple-json-datasource
    volumes:
      - grafana_data:/var/lib/grafana
      - ./monitoring/grafana-provisioning/datasources:/etc/grafana/provisioning/datasources
      - ./monitoring/grafana-provisioning/dashboards:/etc/grafana/provisioning/dashboards
      - ./monitoring/grafana-dashboards:/etc/grafana/provisioning/dashboards
    networks:
      - pawfectsitters-network

  # Node Exporter for system metrics
  node-exporter:
    image: prom/node-exporter:latest
    container_name: pawfectradar-node-exporter
    ports:
      - "9100:9100"
    volumes:
      - /proc:/host/proc:ro
      - /sys:/host/sys:ro
      - /:/rootfs:ro
    command:
      - '--path.procfs=/host/proc'
      - '--path.sysfs=/host/sys'
      - '--collector.filesystem.mount-points-exclude=^/(sys|proc|dev|host|etc)($$|/)'
    networks:
      - pawfectsitters-network

  # PostgreSQL Exporter for database metrics
  postgres-exporter:
    image: prometheuscommunity/postgres-exporter:latest
    container_name: pawfectradar-postgres-exporter
    ports:
      - "9187:9187"
    environment:
      DATA_SOURCE_NAME: "postgresql://pawfectradar:pawfectradar123@postgres:5432/pawfectradar?sslmode=disable"
    depends_on:
      - postgres
    networks:
      - pawfectsitters-network

  # Redis Exporter for Redis metrics
  redis-exporter:
    image: oliver006/redis_exporter:latest
    container_name: pawfectradar-redis-exporter
    ports:
      - "9121:9121"
    environment:
      REDIS_ADDR: "redis://redis:6379"
    depends_on:
      - redis
    networks:
      - pawfectsitters-network

volumes:
  postgres_data:
  redis_data:
  prometheus_data:
  alertmanager_data:
  grafana_data:

networks:
  pawfectradar-network:
    driver: bridge
